{
	"compiler": {
		"version": "0.8.18+commit.87f61d96"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_name",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "_proposal",
						"type": "string"
					}
				],
				"name": "addCandidate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voter",
						"type": "address"
					},
					{
						"internalType": "string",
						"name": "_voterName",
						"type": "string"
					}
				],
				"name": "addVoter",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "candidates",
				"outputs": [
					{
						"internalType": "string",
						"name": "Cname",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "proposal",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "voteCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rank",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_candidateId",
						"type": "uint256"
					}
				],
				"name": "castDelegateVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_candidateId",
						"type": "uint256"
					}
				],
				"name": "castVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_delegate",
						"type": "address"
					}
				],
				"name": "delegateVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionEnded",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "electionStarted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "endElection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllCandidatesDetails",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "Cname",
								"type": "string"
							},
							{
								"internalType": "string",
								"name": "proposal",
								"type": "string"
							},
							{
								"internalType": "uint256",
								"name": "voteCount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "rank",
								"type": "uint256"
							}
						],
						"internalType": "struct OnlineVotingElection.Candidate[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllVoterProfiles",
				"outputs": [
					{
						"components": [
							{
								"internalType": "string",
								"name": "Vname",
								"type": "string"
							},
							{
								"internalType": "address",
								"name": "delegate",
								"type": "address"
							},
							{
								"internalType": "bool",
								"name": "voted",
								"type": "bool"
							},
							{
								"internalType": "uint256",
								"name": "vote",
								"type": "uint256"
							},
							{
								"internalType": "uint16",
								"name": "age",
								"type": "uint16"
							}
						],
						"internalType": "struct OnlineVotingElection.Voter[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getCandidateCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_candidateId",
						"type": "uint256"
					}
				],
				"name": "getCandidateDetails",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_voterAddress",
						"type": "address"
					}
				],
				"name": "getVoterProfile",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_candidateId",
						"type": "uint256"
					}
				],
				"name": "getVotesForCandidate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getWinner",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "startElection",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "voterAddresses",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "voters",
				"outputs": [
					{
						"internalType": "string",
						"name": "Vname",
						"type": "string"
					},
					{
						"internalType": "address",
						"name": "delegate",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "voted",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "vote",
						"type": "uint256"
					},
					{
						"internalType": "uint16",
						"name": "age",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Ankit Bhardwaj",
			"details": "Impelements replacement for traditional electronic voting  solutions with distributed, non-repudiation, and security  protection characteristics",
			"kind": "dev",
			"methods": {
				"addCandidate(string,string)": {
					"details": "To add candidate for the election.",
					"params": {
						"_name": "of the candidate",
						"_proposal": "of the candidate"
					}
				},
				"addVoter(address,string)": {
					"details": "To add voter.",
					"params": {
						"_voter": "address of the voter",
						"_voterName": "of the voter"
					}
				},
				"constructor": {
					"details": "Creates a new voting system to choose one of 'candidates'"
				},
				"endElection()": {
					"details": "To start voting"
				},
				"startElection()": {
					"details": "To start voting"
				}
			},
			"title": "Electronic Voting System",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Capstone.sol": "OnlineVotingElection"
		},
		"evmVersion": "paris",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Capstone.sol": {
			"keccak256": "0xd9d9e885d5d2147f724b7019bab8e4f69ac5cb3ebe7578649da8125fbb1d90e8",
			"license": "MIT",
			"urls": [
				"bzz-raw://f13084a3be8a3fd5a91ad6b7b57ac6f738cacf5cf6a27130b22e35621eeb9bb2",
				"dweb:/ipfs/QmaBZ4PCyCwiYvdZJ79SM5oJmxD1nDVqpk2WPgbqShxkvF"
			]
		}
	},
	"version": 1
}